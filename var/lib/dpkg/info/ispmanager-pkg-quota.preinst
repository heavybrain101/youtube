#!/bin/bash
# preinst script for coremanager-5.15.0
#
# see: dh_installdeb(1)


# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


COREDIR=/usr/local/mgr5
. ${COREDIR}/lib/pkgsh/core_pkg_funcs.sh
. ${COREDIR}/lib/pkgsh/ispmgr_pkg_funcs.sh

case "$1" in
    install)
		Error() {
			echo "${1}"
			exit 1
		}


		GetMountOptions() {
			OPTIONS=$(cat /etc/fstab | awk -v mpoint="${MOUNTPOINT}" '$1 !~ "#" && $2 == mpoint {print $4}')
			FSTYPE=$(cat /etc/fstab | awk -v mpoint="${MOUNTPOINT}" '$1 !~ "#" && $2 == mpoint {print $3}')
			if [ "${FSTYPE}" = "none" ]; then
				# Для директорий, смонтированных через -o bind
				MDIR=$(cat /etc/fstab | awk -v mpoint="${MOUNTPOINT}" '$1 !~ "#" && $2 == mpoint {print $1}')
				MOUNTPOINT=$(df -P -l ${MDIR} | tail -1 | awk '{print $6}')
				GetMountOptions
			fi
		}

		
		if [ "#${ISPCONVERT}" != "#yes" ]; then
			## Activating quota
			HOMEDIR=$(${MGRCTL} -m ${ISPMGR} pathlist elid=DefaultHomeDir | cut -d= -f2)
			MOUNTPOINT=$(df -P -l ${HOMEDIR} | tail -1 | awk '{print $6}')
			test -z ${MOUNTPOINT} && Error "Can not detect mount point"

			if [ -f /etc/fstab ]; then
				GetMountOptions
				CHECKOPTIONS=${OPTIONS}
			fi

			if [ -n "${OPTIONS}" ] && [ "#${FSTYPE}" != "#rootfs" ] && [ ! -f /proc/vz/veinfo ]; then
				# Если опции пустые, то маунтпоинта во fstab нету и это какая-то vz-подобная виртуализация
				# и там всё это делать не нужно
				NEWOPTIONS=${OPTIONS}
				if [ "#${FSTYPE}" = "#xfs" ]; then
					# overwrite CHECKOPTIONS for xfs
					CHECKOPTIONS=$(cat /etc/mtab | awk -v mpoint="${MOUNTPOINT}" '$1 !~ "rootfs" && $1 !~ "#" && $2 == mpoint {print $4}')
				fi
				echo "${CHECKOPTIONS}" | grep -qE '(uquota|usrquota|uqnoenforce)' || NEWOPTIONS="${NEWOPTIONS},usrquota"
				echo "${CHECKOPTIONS}" | grep -qE '(gquota|grpquota|gqnoenforce)' || NEWOPTIONS="${NEWOPTIONS},grpquota"
				if [ "#${OPTIONS}" != "#${NEWOPTIONS}" ]; then
					# патчим /etc/fstab
					test -f /etc/fstab.orig || cp -pf /etc/fstab /etc/fstab.orig ## Backuping if not backuped
					sed -i -r "s|(.+\s+)${MOUNTPOINT}(\s+.+\s+)(${OPTIONS})(\s+.+$)|\1${MOUNTPOINT}\2${NEWOPTIONS}\4|" /etc/fstab
					UPDATED=yes
					if [ "#${FSTYPE}" = "#xfs" ] && [ "#${MOUNTPOINT}" = "#/" ]; then
						# Если это XFS и это корневой раздел, то патчим и grub.cfg
						if [ -f /etc/default/grub ]; then
							sed -i -r 's/(^GRUB_CMDLINE_LINUX_DEFAULT=.*)("$)/\1 rootflags=usrquota,grpquota\2/' /etc/default/grub
							if which update-grub ; then
								update-grub || :
							fi
						fi
					fi
				fi
			fi

			if [ "#${FSTYPE}" = "#xfs" ]; then
				echo "Option XfsQuota" >> ${COREDIR}/etc/${ISPMGR}.conf
				if [ -n "${UPDATED}" ]; then
					# Xfs не поддерживает включение квот через mount -o remount
					echo "xfsquota" > ${COREDIR}/var/needreboot
				fi
			elif df -P -l ${HOMEDIR} | tail -1 | awk '{print $1}' | grep -q simfs ; then
				echo "Option DisableQuotasync" >> ${COREDIR}/etc/${ISPMGR}.conf
			else
				if [ -n "${OPTIONS}" ] && [ "#${FSTYPE}" != "#rootfs" ] && [ ! -f /proc/vz/veinfo ]; then
					mount -o remount ${MOUNTPOINT} || Error "Can not remount FS"
				else
					repquota -ug ${MOUNTPOINT} >/dev/null 2>&1 || Error "Quota must be enabled ouside VE"
				fi
				quotaoff -ug ${MOUNTPOINT} || Error "Can not off quota"
				quotacheck -ug -fm ${MOUNTPOINT} || Error "Can not check quota"
				quotaon -ug ${MOUNTPOINT} || Error "Can not on quota"
			fi

		fi
	;;
	upgrade)
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
